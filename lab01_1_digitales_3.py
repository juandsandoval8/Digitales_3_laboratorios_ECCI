# -*- coding: utf-8 -*-
"""Lab01.1_digitales_3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rW_Adwzv4XWXGyvsPf4721zqhlART0wb

# 1. Clase Contacto
"""

class Contacto:
    def __init__(self, nombre, telefono, cumpleanos, correo):
        self.nombre = nombre
        self.telefono = telefono
        self.cumpleanos = cumpleanos
        self.correo = correo

    def __str__(self):
        return (f"Nombre: {self.nombre}\n"
                f"Teléfono: {self.telefono}\n"
                f"Cumpleaños: {self.cumpleanos}\n"
                f"Correo: {self.correo}\n")

"""# 2. Clase Directorio"""

import json
import re

class Directorio:
    def __init__(self):
        self.contactos = []  # Lista para almacenar objetos Contacto
        self.indice_telefonos = {}  # Diccionario para indexar contactos por teléfono

    def agregar_contacto(self, contacto):
        if not self.validar_telefono(contacto.telefono):
            print("Error: El teléfono debe tener 10 dígitos.")
            return
        if not self.validar_correo(contacto.correo):
            print("Error: El correo electrónico no tiene un formato válido.")
            return
        self.contactos.append(contacto)
        self.indice_telefonos[contacto.telefono] = contacto
        print("Contacto agregado exitosamente.")

    def buscar_por_telefono(self, telefono):
        return self.indice_telefonos.get(telefono, "Contacto no encontrado.")

    def eliminar_contacto(self, telefono):
        if telefono in self.indice_telefonos:
            contacto = self.indice_telefonos.pop(telefono)
            self.contactos.remove(contacto)
            print("Contacto eliminado exitosamente.")
        else:
            print("Error: El contacto no existe.")

    def mostrar_contactos(self):
        if not self.contactos:
            print("No hay contactos en el directorio.")
            return
        for contacto in sorted(self.contactos, key=lambda x: x.nombre):
            print(contacto)

    def guardar_datos(self, archivo="contactos.json"):
        datos = [{"nombre": c.nombre, "telefono": c.telefono,
                  "cumpleanos": c.cumpleanos, "correo": c.correo}
                 for c in self.contactos]
        with open(archivo, "w") as f:
            json.dump(datos, f)
        print("Datos guardados exitosamente.")

    def cargar_datos(self, archivo="contactos.json"):
        try:
            with open(archivo, "r") as f:
                datos = json.load(f)
                for item in datos:
                    contacto = Contacto(item["nombre"], item["telefono"],
                                       item["cumpleanos"], item["correo"])
                    self.agregar_contacto(contacto)
            print("Datos cargados exitosamente.")
        except FileNotFoundError:
            print("Error: El archivo no existe.")

    @staticmethod
    def validar_telefono(telefono):
        return telefono.isdigit() and len(telefono) == 10

    @staticmethod
    def validar_correo(correo):
        regex = r'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
        return re.match(regex, correo) is not None

"""# 3. Interfaz de Usuario"""

def menu():
    directorio = Directorio()
    while True:
        print("\n--- Directorio Telefónico ---")
        print("1. Agregar contacto")
        print("2. Buscar contacto por teléfono")
        print("3. Eliminar contacto")
        print("4. Mostrar todos los contactos")
        print("5. Guardar datos")
        print("6. Cargar datos")
        print("7. Salir")
        opcion = input("Seleccione una opción: ")

        if opcion == "1":
            nombre = input("Nombre: ")
            telefono = input("Teléfono: ")
            cumpleanos = input("Cumpleaños: ")
            correo = input("Correo: ")
            contacto = Contacto(nombre, telefono, cumpleanos, correo)
            directorio.agregar_contacto(contacto)

        elif opcion == "2":
            telefono = input("Ingrese el teléfono a buscar: ")
            resultado = directorio.buscar_por_telefono(telefono)
            print(resultado)

        elif opcion == "3":
            telefono = input("Ingrese el teléfono del contacto a eliminar: ")
            directorio.eliminar_contacto(telefono)

        elif opcion == "4":
            directorio.mostrar_contactos()

        elif opcion == "5":
            directorio.guardar_datos()

        elif opcion == "6":
            directorio.cargar_datos()

        elif opcion == "7":
            print("Saliendo del programa...")
            break

        else:
            print("Opción no válida. Intente de nuevo.")

if __name__ == "__main__":
    menu()